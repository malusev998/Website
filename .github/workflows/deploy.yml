on:
  push:
    tags:
      - 'v*'
jobs:
  test:
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: dusanmalusev
        ports:
          - '5432:5432'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:6-alpine
        ports:
          - '6379:6379'
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
        include-prerelease: true
    - name: 'Add Sertificates'
      run: make certificate
    - name: 'Building the API'
      run: make build-prod RUNTIME=linux-x64
    # - name: 'Running Tests'
    #   run: make test
    #   env:
    #     ASPNETCORE_ENVIRONMENT: Testing
    #     ConnectionStrings__DusanMalusevPostgres: 'Host=127.0.0.1;Port=5432;Username=postgres;Password=postgres;Timezone=UTC;'
    #     ConnectionStrings__DefaultRedis: '127.0.0.1:6379,resolveDns=true,allowAdmin=true,connectTimeout=200,connectTimeout=10,keepAlive=10,name=DefaultRedisConnection'
    #     ConnectionStrings__CacheRedis: '127.0.0.1:6379,resolveDns=true,allowAdmin=false,connectTimeout=200,connectTimeout=10,keepAlive=10,name=RedisCacheConnection'
    #     DetailedErrors: true
    #     Google__ReCaptchaV3__SecretKey: ${{ secrets.RECAPTCHA_SECRET_KEY }}
    #     Google__ReCaptchaV3__PublicKey: ${{ secrets.RECAPTCHA_PUBLIC_KEY }}
    #     Google__Analytics: ${{ secrets.GOOGLE_ANALYTICS }}
    - name: Package
      run: |
         make publish
         make migration-bundle
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          DusanMalusev.tar.gz
          efbundle
    - name: Copy efbundle to Postgres Server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.POSTGRES_HOST }}
        username: ${{ secrets.POSTGRES_USER }}
        key: ${{ secrets.POSTGRES_PRIVATE_KEY }}
        overwrite: true
        port: ${{ secrets.PORT }}
        source: "efbundle"
        target: "/tmp/efbundle"
        tar_tmp_path: '/tmp'
    - name: Copy Application to Server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.WEBSITE_HOST }}
        key: ${{ secrets.WEBSITE_PRIVATE_KEY }}
        username: ${{ secrets.WEBSITE_USER }}
        overwrite: true
        port: ${{ secrets.PORT }}
        source: "DusanMalusev.tar.gz"
        target: "/tmp/DusanMalusev.tar.gz"
        tar_tmp_path: '/tmp'
    - name: Deploy Database Schema
      uses: fifsky/ssh-action@master
      with:
        command: |
          cd /tmp
          chmod +x efbundle
          ASPNETCORE_ENVIRONMENT=Production ./efbundle
          rm -rf efbundle
        host: ${{ secrets.POSTGRES_HOST }}
        user: ${{ secrets.POSTGRES_USER }}
        key: ${{ secrets.POSTGRES_PRIVATE_KEY }}
    - name: Deploy Application
      uses: fifsky/ssh-action@master
      with:
        command: |
          cd /tmp
          tar -xvf --overwrite -C /app DusanMalusev.tar.gz
          systemctl restart website
        host: ${{ secrets.WEBSITE_HOST }}
        user: ${{ secrets.WEBSITE_USER }}
        key: ${{ secrets.WEBSITE_PRIVATE_KEY }}
